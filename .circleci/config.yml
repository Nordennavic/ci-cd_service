# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    # Be sure to update the tag on this image to a more stable version, using latest can result in unstable builds.
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:3.1
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Then simply use the dotnet container as you'd expect and run your tests
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run:
          # Update this line with the directory that contains your tests project file
          name: Test 
          command: |
            dotnet test ./
            pwd
      - run:
          name: Build solution
          command: dotnet build -c Release ./RedisService.sln
  deploy-image: 
    docker:
      - image: circleci/node:14.17.3-buster-browsers
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWORD
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Get pwd
          command: |
            pwd
      - run:
          working_directory: ~/project/ci-cd_service
          name: Build docker image
          command: |
            ls
            docker build -t redisservice:test .
      - run:
          name: Build docker image
          command: |
            ls
            docker build -t redisservice:test .
      - run:
          name: Login to docker hub
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
      - run:
          name: Push image
          command: |
            docker image tag redisservice:test $DOCKER_USER/redisservice:test
            docker image push $DOCKER_USER/redisservice:test

           

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      - approve-deploy:
          type: approval
          requires: 
            - build-and-test
          filters:
            branches:
              only: main
      - deploy-image:
          requires: 
            - approve-deploy
          filters:
            branches:
              only: main
