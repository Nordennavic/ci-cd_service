name: Integration Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 3.1
          
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

  build-and-push-image:
      runs-on: ubuntu-latest
      needs: build-and-test-service
      steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/redisservice:latest

  deploy-to-kubernetes:
      runs-on: ubuntu-latest
      needs: [build-and-test-service, build-and-push-image]
      steps:
      - name: Checkout repository
        uses: actions/checkout@v3      
      - name: Deploy to kubernetes
        uses: danielr1996/kubectl-action@1.0.0
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          args: apply -f  ./.github/manifests
